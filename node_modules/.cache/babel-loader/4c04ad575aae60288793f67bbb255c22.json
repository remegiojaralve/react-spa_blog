{"ast":null,"code":"var _jsxFileName = \"/Users/RJ/Trainings/react-spa_blog/src/components/news-archive/NewsArchive.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery, gql } from '@apollo/client';\nimport { useSelector } from 'react-redux';\nimport NewsArticle from '../news-article/NewsArticle';\nimport Button from '../button/Button';\nimport './news-archive.scss';\nimport noImage from '../../assets/images/no-image.png';\n\nfunction NewsArchive() {\n  const auth = useSelector(state => state.auth);\n  const [posts, setPosts] = useState();\n  const [page, setPage] = useState(6);\n\n  const handleLoadMore = () => {\n    setPage(page + page);\n  };\n\n  const GET_POST = gql`\n  query posts($offset: Int, $limit: Int) {\n    posts(pagination : {offset: $offset, limit: $limit}) {\n      id\n      title\n      content\n      image\n      createdAt\n    }\n  }\n  `;\n  const {\n    data\n  } = useQuery(GET_POST, {\n    variables: {\n      offset: 0,\n      limit: page\n    },\n    fetchPolicy: \"cache-and-network\"\n  });\n  useEffect(() => {\n    if (data) {\n      setPosts(data.posts);\n    }\n  }, [data]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"news-archive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"l-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-archive__heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"news-archive__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"NEWS\"), auth && /*#__PURE__*/React.createElement(Link, {\n    to: \"/news/new\",\n    className: \"news-archive__create-new-post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Create New Post\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"news-archive__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, posts && Object.keys(posts).map((value, index) => /*#__PURE__*/React.createElement(Link, {\n    key: index,\n    to: `/news/${posts[index].id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"news-archive__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NewsArticle, {\n    title: posts[index].title,\n    date: posts[index].createdAt ? posts[index].createdAt.split(' ')[0].replace(/-/g, '.') : \"\",\n    image: posts[index].image ? posts[index].image : noImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"news-archive___button\",\n    onClick: handleLoadMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: \"LOAD MORE\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default NewsArchive;","map":{"version":3,"sources":["/Users/RJ/Trainings/react-spa_blog/src/components/news-archive/NewsArchive.js"],"names":["React","useState","useEffect","Link","useQuery","gql","useSelector","NewsArticle","Button","noImage","NewsArchive","auth","state","posts","setPosts","page","setPage","handleLoadMore","GET_POST","data","variables","offset","limit","fetchPolicy","Object","keys","map","value","index","id","title","createdAt","split","replace","image"],"mappings":"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","sourcesContent":["import React, { useState , useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery, gql } from '@apollo/client'\nimport { useSelector } from 'react-redux';\nimport NewsArticle from '../news-article/NewsArticle';\nimport Button from '../button/Button';\nimport './news-archive.scss';\nimport noImage from '../../assets/images/no-image.png';\n\nfunction NewsArchive() {\n  const auth = useSelector(state => state.auth)\n  const [ posts, setPosts ] = useState();\n  const [ page, setPage ] = useState(6);\n\n  const handleLoadMore = () => {\n    setPage(page + page);\n  }\n\n  const GET_POST = gql`\n  query posts($offset: Int, $limit: Int) {\n    posts(pagination : {offset: $offset, limit: $limit}) {\n      id\n      title\n      content\n      image\n      createdAt\n    }\n  }\n  `;\n\n  const { data } = useQuery(\n    GET_POST,\n    {\n      variables: {\n        offset: 0,\n        limit: page\n      },\n      fetchPolicy: \"cache-and-network\"\n    }\n  );\n\n\n  useEffect(() => {\n    if (data) {\n      setPosts(data.posts);\n    }\n  }, [data])\n\n  return (\n    <section className=\"news-archive\">\n      <div className=\"l-container\">\n\n        <div className=\"new-archive__heading\">\n          <h2 className=\"news-archive__title\">NEWS</h2>\n          { auth &&\n            <Link to=\"/news/new\" className=\"news-archive__create-new-post\">Create New Post</Link>\n          }\n        </div>\n\n        <ul className=\"news-archive__list\">\n          { posts &&\n            Object.keys(posts).map((value, index) => (\n              <Link key={index} to={`/news/${posts[index].id}`}>\n                <li className=\"news-archive__item\">\n                  <NewsArticle\n                    title={ posts[index].title }\n                    date={ posts[index].createdAt ? posts[index].createdAt.split(' ')[0].replace(/-/g,'.') : \"\" }\n                    image={ posts[index].image ? posts[index].image : noImage }\n                  />\n                </li>\n              </Link>\n          ))\n          }\n        </ul>\n\n        <div className=\"news-archive___button\" onClick={handleLoadMore}>\n          <Button text=\"LOAD MORE\" type=\"button\" />\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default NewsArchive;\n"]},"metadata":{},"sourceType":"module"}