{"ast":null,"code":"var _jsxFileName = \"/Users/RJ/Trainings/react-spa_blog/src/components/mv/Mv.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport noImage from '../../assets/images/no-image.png';\nimport './mv.scss';\n\nfunction MvSection() {\n  const [posts, setPosts] = useState();\n  let slideIndex = 1;\n  const GET_POST = gql`\n  query posts($offset: Int, $limit: Int) {\n    posts(pagination : {offset: $offset, limit: $limit}) {\n      id\n      title\n      content\n      image\n      createdAt\n    }\n  }\n  `;\n  const {\n    data\n  } = useQuery(GET_POST, {\n    variables: {\n      offset: 0,\n      limit: 3\n    },\n    fetchPolicy: \"cache-and-network\"\n  });\n  useEffect(() => {\n    if (data) {\n      setPosts(data.posts);\n    }\n  }, [data]);\n\n  const showSlides = n => {\n    let i;\n    let slides = document.getElementsByClassName(\"js-mv-slides\");\n    let dots = document.getElementsByClassName(\"js-slider-dot\");\n\n    if (slides.length) {\n      if (n > slides.length) {\n        slideIndex = 1;\n      }\n\n      if (n < 1) {\n        slideIndex = slides.length;\n      }\n\n      for (i = 0; i < slides.length; i++) {\n        slides[i].style.display = \"none\";\n      }\n\n      for (i = 0; i < dots.length; i++) {\n        dots[i].className = dots[i].className.replace(\" is-active\", \"\");\n      }\n\n      slides[slideIndex - 1].style.display = \"block\";\n      dots[slideIndex - 1].className += \" is-active\";\n    }\n  };\n\n  useEffect(() => {\n    showSlides(slideIndex);\n  }, [showSlides, slideIndex]); //function plusSlides(n) {\n\n  const plusSlides = n => {\n    showSlides(slideIndex += n);\n  };\n\n  const currentSlide = n => {\n    showSlides(slideIndex = n);\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"mv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mv__slider-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, posts && Object.keys(posts).map((value, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mv__slides js-mv-slides\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mv__image\",\n    style: {\n      backgroundImage: `url(${posts[index].image ? posts[index].image : noImage})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"l-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mv__slider-text-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mv__slider-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, posts[index].title), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mv__slider-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, posts[index].createdAt ? posts[index].createdAt.split(' ')[0].replace(/-/g, '.') : \"\"))))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"mv__prev\",\n    onClick: e => plusSlides(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"mv__next mv__next--next\",\n    onClick: e => plusSlides(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mv__dots-wrapper\",\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mv__slider-dot js-slider-dot\",\n    onClick: () => currentSlide(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mv__slider-dot js-slider-dot\",\n    onClick: () => currentSlide(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mv__slider-dot js-slider-dot\",\n    onClick: () => currentSlide(3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default MvSection;","map":{"version":3,"sources":["/Users/RJ/Trainings/react-spa_blog/src/components/mv/Mv.js"],"names":["React","useState","useEffect","useCallback","useQuery","gql","noImage","MvSection","posts","setPosts","slideIndex","GET_POST","data","variables","offset","limit","fetchPolicy","showSlides","n","i","slides","document","getElementsByClassName","dots","length","style","display","className","replace","plusSlides","currentSlide","Object","keys","map","value","index","backgroundImage","image","title","createdAt","split","e","textAlign"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback } from 'react';\nimport { useQuery, gql } from '@apollo/client'\nimport noImage from '../../assets/images/no-image.png';\nimport './mv.scss';\n\nfunction MvSection() {\n  const [ posts, setPosts ] = useState();\n  let slideIndex = 1;\n\n  const GET_POST = gql`\n  query posts($offset: Int, $limit: Int) {\n    posts(pagination : {offset: $offset, limit: $limit}) {\n      id\n      title\n      content\n      image\n      createdAt\n    }\n  }\n  `;\n\n  const { data } = useQuery(\n    GET_POST,\n    {\n      variables: {\n        offset: 0,\n        limit: 3\n      },\n      fetchPolicy: \"cache-and-network\"\n    }\n  );\n\n  useEffect(() => {\n    if (data) {\n      setPosts(data.posts);\n    }\n  }, [data])\n\n  const showSlides = (n) => {\n    let i;\n    let slides = document.getElementsByClassName(\"js-mv-slides\");\n    let dots = document.getElementsByClassName(\"js-slider-dot\");\n\n    if(slides.length) {\n      if (n > slides.length) {\n        slideIndex = 1\n      }\n      if (n < 1) {\n        slideIndex = slides.length\n      }\n      for (i = 0; i < slides.length; i++) {\n        slides[i].style.display = \"none\";\n      }\n      for (i = 0; i < dots.length; i++) {\n        dots[i].className = dots[i].className.replace(\" is-active\", \"\");\n      }\n      slides[slideIndex - 1].style.display = \"block\";\n      dots[slideIndex - 1].className += \" is-active\";\n    }\n  }\n\n  useEffect(() => {\n    showSlides(slideIndex);\n  }, [showSlides, slideIndex]);\n\n  //function plusSlides(n) {\n  const plusSlides = (n) => {\n    showSlides(slideIndex += n);\n  }\n\n  const currentSlide = (n) => {\n    showSlides(slideIndex = n);\n  }\n\n  return (\n    <section className=\"mv\">\n      <div className=\"mv__slider-container\">\n\n        { posts &&\n          Object.keys(posts).map((value, index) => (\n            <div className=\"mv__slides js-mv-slides\" key={index}>\n              <div className=\"mv__image\" style={{ backgroundImage: `url(${posts[index].image ? posts[index].image : noImage})` }}></div>\n              <div className=\"l-container\">\n                <div className=\"mv__slider-text-wrapper\">\n                  <h2 className=\"mv__slider-title\">{posts[index].title}</h2>\n                  <span className=\"mv__slider-time\">{posts[index].createdAt ? posts[index].createdAt.split(' ')[0].replace(/-/g,'.') : \"\"}</span>\n                </div>\n              </div>\n            </div>\n          ))\n        }\n\n        <button className=\"mv__prev\" onClick={(e) => plusSlides(-1)}></button>\n        <button className=\"mv__next mv__next--next\" onClick={(e) => plusSlides(1)}></button>\n      </div>\n      <br/>\n\n      <div className=\"mv__dots-wrapper\" style={{textAlign: 'center'}}>\n        <span className=\"mv__slider-dot js-slider-dot\" onClick={()=> currentSlide(1)}></span>\n        <span className=\"mv__slider-dot js-slider-dot\" onClick={()=> currentSlide(2)}></span>\n        <span className=\"mv__slider-dot js-slider-dot\" onClick={()=> currentSlide(3)}></span>\n      </div>\n    </section>\n  );\n}\n\nexport default MvSection;\n"]},"metadata":{},"sourceType":"module"}