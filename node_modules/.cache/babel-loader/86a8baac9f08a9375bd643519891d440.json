{"ast":null,"code":"var _jsxFileName = \"/Users/RJ/Trainings/react-spa_blog/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ApolloClient, ApolloProvider, HttpLink, ApolloLink, InMemoryCache, concat } from '@apollo/client';\nimport { createStore } from 'redux';\nimport reducers from './redux';\nimport './assets/style/style.scss';\nimport { Provider } from 'react-redux';\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:4000/'\n});\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  operation.setContext({\n    headers: {\n      authorization: localStorage.getItem('token') || null\n    }\n  });\n  return forward(operation);\n});\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: concat(authMiddleware, httpLink)\n});\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }\n})))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/RJ/Trainings/react-spa_blog/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","ApolloClient","ApolloProvider","HttpLink","ApolloLink","InMemoryCache","concat","createStore","reducers","Provider","store","window","__REDUX_DEVTOOLS_EXTENSION__","httpLink","uri","authMiddleware","operation","forward","setContext","headers","authorization","localStorage","getItem","client","cache","link","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,QAAvC,EAAiDC,UAAjD,EAA6DC,aAA7D,EAA4EC,MAA5E,QAA0F,gBAA1F;AAEA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,OAAO,2BAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,MAAMC,KAAK,GAAGH,WAAW,CACvBC,QADuB,EAEvBG,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFhB,CAAzB;AAKA,MAAMC,QAAQ,GAAG,IAAIV,QAAJ,CAAa;AAAEW,EAAAA,GAAG,EAAE;AAAP,CAAb,CAAjB;AAEA,MAAMC,cAAc,GAAG,IAAIX,UAAJ,CAAe,CAACY,SAAD,EAAYC,OAAZ,KAAwB;AAC5DD,EAAAA,SAAS,CAACE,UAAV,CAAqB;AACnBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC;AADzC;AADU,GAArB;AAKA,SAAOL,OAAO,CAACD,SAAD,CAAd;AACD,CAPsB,CAAvB;AASA,MAAMO,MAAM,GAAG,IAAItB,YAAJ,CAAiB;AAC9BuB,EAAAA,KAAK,EAAE,IAAInB,aAAJ,EADuB;AAE9BoB,EAAAA,IAAI,EAAEnB,MAAM,CAACS,cAAD,EAAiBF,QAAjB;AAFkB,CAAjB,CAAf;AAKAf,QAAQ,CAAC4B,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEb,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,EAQEiB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA;;AACA5B,aAAa,CAAC6B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ApolloClient, ApolloProvider, HttpLink, ApolloLink, InMemoryCache, concat } from '@apollo/client';\n\nimport { createStore } from 'redux';\nimport reducers from './redux';\nimport './assets/style/style.scss'\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst httpLink = new HttpLink({ uri: 'http://localhost:4000/' });\n\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  operation.setContext({\n    headers: {\n      authorization: localStorage.getItem('token') || null,\n    }\n  });\n  return forward(operation);\n})\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: concat(authMiddleware, httpLink),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}