{"ast":null,"code":"var _jsxFileName = \"/Users/RJ/Trainings/react-spa_blog/src/components/news/NewsEditDetailForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useQuery, useMutation, gql } from '@apollo/client';\nimport dummyNewsImage from '../../assets/images/dummy-news-image.jpg';\nimport noImage from '../../assets/images/no-image.png';\nimport './news-detail.scss';\n\nfunction NewsDetailForm() {\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [image, setImage] = useState();\n  const [changesTracker, setChangesTracker] = useState(0);\n  const [post, setPost] = useState();\n  const GET_POST = gql`\n  query getPost {\n    post(id: ${id}) {\n      id\n      title\n      content\n      createdAt\n      image\n    }\n  }\n  `;\n  const {\n    data\n  } = useQuery(GET_POST);\n  useEffect(() => {\n    if (data) {\n      setPost(data.post);\n      setImage(data.post.image);\n    }\n  }, [data]);\n  const UPDATE_POST = gql`\n  mutation updatePost($id: Int!, $title: String!, $image: String, $content: String) {\n    updatePost(post : {id: $id, title: $title, image: $image, content: $content}) {\n      id\n    }\n  }\n  `;\n  const [updatePost] = useMutation(UPDATE_POST, {\n    update(_, result) {\n      history.push(`/news/${id}`);\n    },\n\n    onError(err) {\n      console.log(err);\n    }\n\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updatePost({\n      variables: post\n    });\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    setChangesTracker(changesTracker + 1);\n    setPost({ ...post,\n      [event.target.name]: event.target.value\n    });\n\n    if (event.target.name === \"image\") {\n      let files = event.target.files;\n      let filesArr = Array.prototype.slice.call(files);\n      filesArr.forEach(function (f) {\n        if (!f.type.match(\"image.*\")) return;\n        let reader = new FileReader();\n\n        reader.onload = function (event) {\n          let base64 = event.target.result;\n          setImage(base64);\n          setPost({ ...post,\n            \"image\": base64\n          });\n        };\n\n        reader.readAsDataURL(f);\n      });\n    }\n  };\n\n  const handleDiscardChanges = e => {\n    e.preventDefault();\n\n    if (changesTracker > 0) {\n      let confirm = window.confirm(\"Discard Changes?\");\n      if (!confirm) return;\n      history.push(`/news/${id}`);\n    } else {\n      history.push(`/news/${id}`);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"l-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"news-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"admin-link admin-link--left\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Save Post\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"admin-link\",\n    onClick: e => handleDiscardChanges(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"news-detail__date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"time\", {\n    \"data-time\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"2019.06.19\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"news-detail__title news-detail__title--textarea\",\n    name: \"title\",\n    value: post && post.title,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"news-detail__upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"news-detail__image-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"news-detail__image\",\n    style: {\n      backgroundImage: `url(${image && image ? image : noImage})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"news-detail__file-input\",\n    onChange: handleChange,\n    type: \"file\",\n    id: \"img\",\n    name: \"image\",\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"news-detail__description news-detail__description--textarea\",\n    name: \"content\",\n    value: post && post.content ? post.content : \"\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"news-detail__hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default NewsDetailForm;","map":{"version":3,"sources":["/Users/RJ/Trainings/react-spa_blog/src/components/news/NewsEditDetailForm.js"],"names":["React","useState","useEffect","useHistory","useParams","useQuery","useMutation","gql","dummyNewsImage","noImage","NewsDetailForm","id","history","image","setImage","changesTracker","setChangesTracker","post","setPost","GET_POST","data","UPDATE_POST","updatePost","update","_","result","push","onError","err","console","log","handleSubmit","e","preventDefault","variables","handleChange","event","target","name","value","files","filesArr","Array","prototype","slice","call","forEach","f","type","match","reader","FileReader","onload","base64","readAsDataURL","handleDiscardChanges","confirm","window","title","backgroundImage","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useQuery, useMutation, gql } from '@apollo/client'\nimport dummyNewsImage from '../../assets/images/dummy-news-image.jpg';\nimport noImage from '../../assets/images/no-image.png';\nimport './news-detail.scss';\n\nfunction NewsDetailForm() {\n  const { id } = useParams();\n  const history =  useHistory();\n  const [ image, setImage ] = useState()\n  const [changesTracker, setChangesTracker] = useState(0);\n  const [ post, setPost ] = useState();\n\n  const GET_POST = gql`\n  query getPost {\n    post(id: ${id}) {\n      id\n      title\n      content\n      createdAt\n      image\n    }\n  }\n  `\n  const { data } = useQuery(GET_POST);\n\n  useEffect(()=>{\n    if (data) {\n      setPost(data.post);\n      setImage(data.post.image)\n    }\n  }, [data])\n\n  const UPDATE_POST = gql`\n  mutation updatePost($id: Int!, $title: String!, $image: String, $content: String) {\n    updatePost(post : {id: $id, title: $title, image: $image, content: $content}) {\n      id\n    }\n  }\n  `;\n\n  const [updatePost] = useMutation(UPDATE_POST, {\n    update(_, result) {\n      history.push(`/news/${id}`);\n    },\n    onError(err) {\n      console.log(err)\n    }\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    updatePost({variables: post});\n  }\n\n\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    setChangesTracker (changesTracker + 1);\n    setPost({...post, [event.target.name]: event.target.value});\n\n    if(event.target.name === \"image\") {\n      let files = event.target.files;\n      let filesArr = Array.prototype.slice.call(files);\n      filesArr.forEach(function(f) {\n        if (!f.type.match(\"image.*\")) return;\n        let reader = new FileReader();\n        reader.onload = function(event) {\n          let base64 = event.target.result;\n          setImage(base64);\n          setPost({...post, \"image\": base64});\n        };\n        reader.readAsDataURL(f);\n      });\n\n    }\n  }\n\n  const handleDiscardChanges = (e) => {\n    e.preventDefault();\n    if(changesTracker > 0) {\n      let confirm = window.confirm(\"Discard Changes?\");\n      if(!confirm) return;\n      history.push(`/news/${id}`);\n    }else {\n      history.push(`/news/${id}`);\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"l-container\">\n        <div className=\"news-detail\">\n          <button className=\"admin-link admin-link--left\" type=\"submit\">Save Post</button>\n          <button className=\"admin-link\" onClick={(e) => handleDiscardChanges(e)}>Cancel</button>\n          <div className=\"news-detail__date\">\n            <time data-time=\"\">2019.06.19</time>\n          </div>\n\n          <textarea className=\"news-detail__title news-detail__title--textarea\" name=\"title\" value={ post && post.title } onChange={handleChange}/>\n\n          <div className=\"news-detail__upload\">\n            <div className=\"news-detail__image-wrapper\">\n              <div className=\"news-detail__image\" style={{ backgroundImage: `url(${image && image ? image : noImage})` }}></div>\n            </div>\n            <input className=\"news-detail__file-input\" onChange={ handleChange } type=\"file\" id=\"img\" name=\"image\" accept=\"image/*\" />\n          </div>\n\n          <textarea className=\"news-detail__description news-detail__description--textarea\" name=\"content\" value={ post && post.content ? post.content : \"\" } onChange={handleChange}/>\n\n          <div className=\"news-detail__hr\"></div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default NewsDetailForm;\n"]},"metadata":{},"sourceType":"module"}