{"ast":null,"code":"var _jsxFileName = \"/Users/RJ/Trainings/react-spa_blog/src/components/form/LoginForm.js\";\nimport React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport { useDispatch } from 'react-redux';\nimport { authLogin } from '../../redux/modules/auth/authActions';\nimport { toggleFormType, toggleForm } from '../../redux/modules/toggleForm/toggleFormActions';\nimport Button from '../button/Button';\nimport './form.scss';\n\nfunction LoginForm(props) {\n  const dispatch = useDispatch();\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [isErrorClass, setIsErrorClass] = useState(\"\");\n  const [isOpenClass, setIsOpenClass] = useState(\"\");\n  const LOGIN_USER = gql`\n  mutation authenticate($email: String!, $password: String!) {\n    authenticate(email: $email, password: $password)\n  }\n  `;\n  const [loginUser] = useMutation(LOGIN_USER, {\n    update(_, result) {\n      if (result.data.authenticate) {\n        localStorage.setItem('token', result.data.authenticate);\n        dispatch(authLogin(true));\n        dispatch(toggleForm());\n      } else {\n        setIsErrorClass(\"is-error\");\n        setTimeout(() => {\n          setIsOpenClass(\"is-open\");\n        }, 100);\n      }\n    }\n\n  });\n\n  const onSubmit = event => {\n    event.preventDefault();\n    loginUser({\n      variables: values\n    });\n  };\n\n  const onChange = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n    setIsOpenClass(\"\");\n    setTimeout(() => {\n      setIsErrorClass(\"\");\n    }, 0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form ${isErrorClass} ${props.stateClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"form__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"LOGIN\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: `form__error-message ${isOpenClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"The email and password you've entered doesn't match any account.\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form__input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form__label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form__input\",\n    name: \"email\",\n    type: \"email\",\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form__input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form__label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form__input\",\n    name: \"password\",\n    type: \"password\",\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form__button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: \"LOGIN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form__note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"No account yet?\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(toggleFormType('register-form')),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \" REGISTER HERE\")));\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/RJ/Trainings/react-spa_blog/src/components/form/LoginForm.js"],"names":["React","useState","useMutation","gql","useDispatch","authLogin","toggleFormType","toggleForm","Button","LoginForm","props","dispatch","values","setValues","email","password","isErrorClass","setIsErrorClass","isOpenClass","setIsOpenClass","LOGIN_USER","loginUser","update","_","result","data","authenticate","localStorage","setItem","setTimeout","onSubmit","event","preventDefault","variables","onChange","target","name","value","stateClass"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { useMutation, gql } from '@apollo/client'\n\nimport { useDispatch } from 'react-redux';\nimport { authLogin } from '../../redux/modules/auth/authActions';\nimport { toggleFormType, toggleForm } from '../../redux/modules/toggleForm/toggleFormActions';\n\nimport Button from '../button/Button';\nimport './form.scss';\n\nfunction LoginForm(props) {\n  const dispatch =  useDispatch();\n\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [isErrorClass, setIsErrorClass] = useState(\"\");\n  const [isOpenClass, setIsOpenClass] = useState(\"\");\n\n  const LOGIN_USER = gql`\n  mutation authenticate($email: String!, $password: String!) {\n    authenticate(email: $email, password: $password)\n  }\n  `;\n\n  const [ loginUser ] = useMutation(LOGIN_USER, {\n    update(_, result) {\n      if(result.data.authenticate){\n        localStorage.setItem('token', result.data.authenticate);\n        dispatch(authLogin(true));\n        dispatch(toggleForm());\n      }else {\n        setIsErrorClass(\"is-error\");\n        setTimeout(() => {\n          setIsOpenClass(\"is-open\");\n        }, 100)\n      }\n    }\n  });\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    loginUser({variables: values});\n  }\n\n  const onChange = (event) => {\n    event.preventDefault();\n    setValues({...values, [event.target.name]: event.target.value});\n\n    setIsOpenClass(\"\");\n    setTimeout(() => {\n      setIsErrorClass(\"\");\n    }, 0)\n  }\n\n  return (\n    <div className={`form ${isErrorClass} ${props.stateClass}`}>\n      <h2 className=\"form__title\">LOGIN</h2>\n      <div className={`form__error-message ${isOpenClass}`}>The email and password you've entered doesn't match any account.</div>\n\n      <form onSubmit={onSubmit}>\n        <div className=\"form__input-container\">\n          <label className=\"form__label\">Email</label>\n          <input className=\"form__input\" name=\"email\" type=\"email\" onChange={onChange} required/>\n        </div>\n\n        <div className=\"form__input-container\">\n          <label className=\"form__label\">Password</label>\n          <input className=\"form__input\" name=\"password\" type=\"password\" onChange={onChange} required/>\n        </div>\n\n        <div className=\"form__button-wrapper\">\n          <Button text=\"LOGIN\"/>\n        </div>\n      </form>\n\n      <div className=\"form__note\">\n        No account yet?\n        <button onClick={() => dispatch(toggleFormType('register-form'))} type=\"button\"> REGISTER HERE</button>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}